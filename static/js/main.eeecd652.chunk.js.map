{"version":3,"sources":["images/portrait.svg","images/landscape.svg","services/api.js","config/index.js","Components/SelectCategories/index.js","Components/SelectOrientation/index.js","Components/ModalBackground/index.js","Components/OverlayFilter/index.js","config/ItemTypes.js","Components/Box/index.js","Components/DragAndDropText/index.js","utils/categoriesToQuery.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","api","axios","create","baseURL","options","value","label","active","pixabayKey","SelectCategories","onSubmit","useState","selectedOption","setSelectedOption","React","open","setOpen","categoriesSelected","setCategoriesSelected","Dialog","onClose","aria-labelledby","classes","paper","DialogTitle","id","DialogContent","DialogContentText","FormControl","className","TextField","type","variant","map","option","index","key","Chip","onClick","chip","newCategoriesSelected","handleClick","clickable","color","Button","e","a","async","preventDefault","disableElevation","useStyles","makeStyles","root","maxWidth","title","display","marginBottom","fontSize","flex","justifyContent","img","height","objectFit","card","flexDirection","alignItems","margin","padding","cursor","backgroundColor","border","borderRadius","minWidth","SelectOrientation","onSelect","Card","src","imagePortrait","alt","imageLandScape","ModalBackground","backgrounds","bg","localStorage","setItem","largeImageURL","OverlayFilter","opacity","style","position","Box","left","top","hideSourceOnDrag","children","useDrag","item","ItemTypes","collect","monitor","isDragging","drag","ref","DragAndDropText","boxes","setBoxes","useDrop","accept","drop","delta","getDifferenceFromInitialOffset","Math","round","x","y","moveBox","update","$merge","categoriesToQuery","categories","handleArray","push","join","App","name","showSelectOrientation","setShowSelectOrientation","showModalCategories","setShowModalCategories","showPanel","setShowPanel","showModalBackground","setShowModalBackground","setBackgrounds","orientation","setOrientation","filter","text","panel","setPanel","filterColor","setFilterColor","filterOpacity","setFilterOpacity","displayColorPicker","setDisplayColorPicker","useEffect","data","get","response","hits","Switch","checked","onChange","event","target","inputProps","background","onChangeComplete","hex","Slider","disabled","min","step","max","newValue","valueLabelDisplay","input","size","newBox","handleChangeText","newText","shortid","generate","getItem","backgroundSize","DndProvider","backend","Backend","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.eeecd652.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/portrait.9bd3abe0.svg\";","module.exports = __webpack_public_path__ + \"static/media/landscape.167f273a.svg\";","import axios from 'axios';\n\n\nconst api = axios.create({\n    baseURL: `https://pixabay.com/api`\n});\n\nexport default api;","export const options = [\n    { value: 'fashion', label: 'Moda', active: false },\n    { value: 'nature', label: 'Natureza', active: false },\n    { value: 'backgrounds', label: 'Fundos', active: false },\n    { value: 'science', label: 'Ciência', active: false },\n    { value: 'education', label: 'Educação', active: false },\n    { value: 'people', label: 'Pessoas', active: false },\n    { value: 'feelings', label: 'Sentimentos', active: false },\n    { value: 'religion', label: 'Religião', active: false },\n    { value: 'health', label: 'Saúde', active: false },\n    { value: 'places', label: 'Locais', active: false },\n    { value: 'animals', label: 'Animais', active: false },\n    { value: 'industry', label: 'Indústria', active: false },\n    { value: 'food', label: 'Comida', active: false },\n    { value: 'computer', label: 'Computador', active: false },\n    { value: 'sports', label: 'Esportes', active: false },\n    { value: 'transportation', label: 'Transporte', active: false },\n    { value: 'travel', label: 'Viagem', active: false },\n    { value: 'buildings', label: 'Edifícios', active: false },\n    { value: 'business', label: 'Negócios', active: false },\n    { value: 'music', label: 'Música', active: false },\n];\n\nexport const pixabayKey = '8387701-5e4e7d3a7ec1162dbcc87ac47';\n","import React, { useState, useEffect } from 'react';\nimport { options } from '../../config';\nimport './styles.css';\nimport { Chip, Dialog, DialogTitle, DialogContent, DialogContentText, Button, DialogActions, FormControl, InputLabel, MenuItem, Select, Checkbox, ListItemText, TextField } from '@material-ui/core';\n\n\nconst SelectCategories = ({ onSubmit }) => {\n    const [selectedOption, setSelectedOption] = useState([]);\n    const [open, setOpen] = React.useState(true);\n\n    const [categoriesSelected, setCategoriesSelected] = useState(options);\n\n    const handleChange = event => {\n        setSelectedOption(event.target.value);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    async function handleSubmit(e) {\n        e.preventDefault();\n        await onSubmit({\n            selectedOption,\n        });\n    };\n\n    const handleClick = (chip, index) => {\n        setSelectedOption([...selectedOption, chip]);\n\n        const newCategoriesSelected = categoriesSelected;\n        newCategoriesSelected[index].active = !newCategoriesSelected[index].active;\n        setCategoriesSelected(newCategoriesSelected);\n    };\n\n    return (\n        <Dialog\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"max-width-dialog-title\"\n            classes={{ paper: \"dialog\" }}\n        >\n            <DialogTitle id=\"max-width-dialog-title\">Imagem de fundo</DialogTitle>\n            <DialogContent>\n            <DialogContentText>\n                Selecione uma ou mais categorias.\n            </DialogContentText>\n                <FormControl className=\"select\">\n                    <TextField id=\"outlined-search\" label=\"Filtrar categorias\" type=\"search\" variant=\"outlined\" />\n                    <div className=\"chipWrapper\">\n                        {categoriesSelected.map((option, index) => (\n                            <div key={option.value} className=\"chip\">\n                                <Chip\n                                    onClick={() => handleClick(option, index)}\n                                    label={option.label}\n                                    variant=\"outlined\"\n                                    clickable\n                                    color={option.active ? \"primary\" : \"default\"}\n                                />\n                            </div>\n                        ))}\n                    </div>\n                    <div className=\"footer\">\n                        <Button onClick={handleSubmit} variant=\"contained\" color=\"primary\" disableElevation>\n                            Buscar Imagens\n                        </Button>\n                    </div>\n                </FormControl>\n            </DialogContent>\n                \n        </Dialog>\n    );\n};\n\nexport default SelectCategories;","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport imagePortrait from '../../images/portrait.svg';\nimport imageLandScape from '../../images/landscape.svg';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n  },\n  title: {\n    display: 'inline-block',\n    marginBottom: 30,\n    fontSize: 20,\n  },\n  flex: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  img: {\n    height: 40,\n    objectFit: 'contain',\n    marginBottom: 10,\n  },\n  card: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    margin: '0 10px',\n    padding: 20,\n    cursor: 'pointer',\n    backgroundColor: '#f5f5f5',\n    border: '1px solid #dedede',\n    borderRadius: 2,\n    minWidth: 180,\n  }\n});\n\nconst SelectOrientation = ({ onSelect }) => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <span className={classes.title}>Qual tipo de imagem quer criar?</span>\n      <div className={classes.flex}>\n        <Card className={classes.card} onClick={() => onSelect('horizontal')}>\n          <img className={classes.img} src={imagePortrait} alt=\"Imagem para Feed\" />\n          Imagem Horizontal\n        </Card>\n        <Card className={classes.card} onClick={() => onSelect('vertical')}>\n          <img className={classes.img} src={imageLandScape} alt=\"Imagem para Stories\" />\n          Imagem Vertical\n        </Card>\n      </div>\n    </>\n  );\n};\n\nexport default SelectOrientation;","import React from 'react';\nimport './styles.css'\n\nconst ModalBackground = ({ backgrounds, onClick }) => {\n\n    function handleClick(e, bg) {\n        onClick()\n        localStorage.setItem('background', bg)\n    };\n\n    return (\n        <div className=\"modalWrapper\">\n            <div className=\"modal\">\n                {backgrounds.map(bg => (\n                    <div key={bg.id} className=\"card\" onClick={(e) => handleClick(e, bg.largeImageURL)}>\n                        <img src={bg.largeImageURL} alt=\"\"/>\n                    </div>\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default ModalBackground;","import React from 'react';\nimport './styles.css';\n\nconst OverlayFilter = ({ color, opacity }) => {\n  return (\n    <div className=\"overlay\" style={{ backgroundColor:color, opacity: opacity }} />\n  );\n}\n\nexport default OverlayFilter;","export default {\n  BOX: 'box',\n}\n","import React from 'react'\nimport { useDrag } from 'react-dnd'\nimport ItemTypes from '../../config/ItemTypes'\nconst style = {\n  position: 'absolute',\n  border: '1px dashed gray',\n  backgroundColor: 'white',\n  padding: '0.5rem 1rem',\n  cursor: 'move',\n}\nconst Box = ({ id, left, top, hideSourceOnDrag, children }) => {\n  const [{ isDragging }, drag] = useDrag({\n    item: { id, left, top, type: ItemTypes.BOX },\n    collect: monitor => ({\n      isDragging: monitor.isDragging(),\n    }),\n  })\n  if (isDragging && hideSourceOnDrag) {\n    return <div ref={drag} />\n  }\n  return (\n    <div ref={drag} style={{ ...style, left, top }}>\n      {children}\n    </div>\n  )\n}\nexport default Box;\n","import React, { useState } from 'react';\n\nimport { useDrop } from 'react-dnd'\nimport ItemTypes from '../../config/ItemTypes'\nimport Box from '../Box'\nimport update from 'immutability-helper'\n\nimport './styles.css';\n\nconst DragAndDropText = ({ boxes, setBoxes }) => {\n  const [hideSourceOnDrag] = useState(true)\n\n  const [, drop] = useDrop({\n    accept: ItemTypes.BOX,\n    drop(item, monitor) {\n      const delta = monitor.getDifferenceFromInitialOffset()\n      const left = Math.round(item.left + delta.x)\n      const top = Math.round(item.top + delta.y)\n      moveBox(item.id, left, top)\n      return undefined\n    },\n  })\n  const moveBox = (id, left, top) => {\n    setBoxes(\n      update(boxes, {\n        [id]: {\n          $merge: { left, top },\n        },\n      }),\n    )\n  }\n\n  return (\n    <div className=\"dnd\">\n      <div ref={drop} className=\"dnsCanvas\">\n        {boxes.map((key, index) => {\n          const { id, left, top, title } = boxes[index]\n          return (\n            <Box\n              key={id}\n              id={index}\n              left={left}\n              top={top}\n              hideSourceOnDrag={hideSourceOnDrag}\n            >\n              {title}\n            </Box>\n          )\n        })}\n      </div>\n    </div>\n  )\n}\n\nexport default DragAndDropText;\n","export const categoriesToQuery = (categories) => {\n  const handleArray = [];\n  categories.map(item => {\n    handleArray.push(item.value);\n    return handleArray;\n  });\n  const categoriesQuery = handleArray.join('+');\n  return categoriesQuery;\n};","import React, { useState, useEffect } from 'react';\nimport api from './services/api';\nimport SelectCategories from './Components/SelectCategories';\nimport SelectOrientation from './Components/SelectOrientation';\n\nimport ModalBackground from './Components/ModalBackground';\nimport { Switch, Slider, TextField, Button } from '@material-ui/core';\nimport { SketchPicker } from 'react-color';\nimport OverlayFilter from './Components/OverlayFilter';\nimport DragAndDropText from './Components/DragAndDropText';\nimport shortid from 'shortid';\nimport { pixabayKey } from './config';\nimport { categoriesToQuery } from './utils/categoriesToQuery';\n\nimport { DndProvider } from 'react-dnd';\nimport Backend from 'react-dnd-html5-backend';\n\nimport './App.css';\n\nfunction App() {\n\n  const [showSelectOrientation, setShowSelectOrientation] = useState(true);\n  const [showModalCategories, setShowModalCategories] = useState(false);\n  const [showPanel, setShowPanel] = useState(false);\n  const [showModalBackground, setShowModalBackground] = useState(false);\n  const [backgrounds, setBackgrounds] = useState('');\n  const [orientation, setOrientation] = useState('');\n\n  const [boxes, setBoxes] = useState([])\n\n  // Painel\n  const [panel, setPanel] = useState({\n    filter: true,\n    text: false,\n  });\n\n  const [filterColor, setFilterColor] = useState('#FFF');\n  const [filterOpacity, setFilterOpacity] = useState(0.2);\n  const [displayColorPicker, setDisplayColorPicker] = useState(false);\n\n\n  useEffect(() => {\n    localStorage.setItem('background', '')\n  }, [])\n  \n\n  async function handleImageBackground(data) {\n    if (backgrounds === '') {\n      const response = await api.get(`?key=${pixabayKey}&q=${categoriesToQuery(data.selectedOption)}&orientation=${orientation}&image_type=photo&pretty=true`);\n      setBackgrounds(response.data.hits);\n      setShowModalBackground(true);\n      setShowPanel(true);\n    }\n  };\n\n  const handleOrientation = (orientation) => {\n    setOrientation(orientation);\n    setShowSelectOrientation(false);\n    setShowModalCategories(true);\n  }\n\n  const handleCloseBackgrounds = () => {\n    setShowModalBackground(false)\n    setShowModalCategories(false);\n  };\n\n  const reset = () => {\n    setShowSelectOrientation(true);\n  };\n\n  const handlePanel = name => event => {\n    setPanel({ ...panel, [name]: event.target.checked });\n  };\n\n  const handleFilterColor = (color) => {\n    setFilterColor(color.hex);\n  };\n\n  const handleOpenColorPicker = () => {\n    if (panel.filter) {\n      setDisplayColorPicker(!displayColorPicker);\n    }\n  };\n\n  const handleCloseColorPicker = () => {\n    setDisplayColorPicker(false);\n  };\n\n  const handleChangeFilterValue = (event, newValue) => {\n    setFilterOpacity(newValue);\n  };\n\n  const handleChangeText = (event, index) => {\n    const newBox = boxes;\n    newBox[index].title = event.target.value;\n    setBoxes([ ...newBox ]);\n  };\n\n  const handleAddText = () => {\n    const newText = {\n      id: shortid.generate(),\n      top: 180,\n      left: 200,\n      title: 'Novo texto...'\n    }\n    setBoxes([ ...boxes, newText ]);\n\n    if (!panel.text) {\n      setPanel({ ...panel, text: true })\n    }\n  };\n\n  return (\n    <div className=\"App\">\n\n      <button onClick={reset} className=\"reset\">\n        Nova Imagem\n      </button>\n\n      {showModalBackground && (\n        <ModalBackground onClick={handleCloseBackgrounds} backgrounds={backgrounds} />\n      )}\n\n      <div className=\"canvasWrapper\">\n\n        {showSelectOrientation && (\n          <SelectOrientation onSelect={handleOrientation} />\n        )}\n\n        {showModalCategories && (\n          <SelectCategories onSubmit={handleImageBackground} />\n        )}\n\n        {showPanel && (\n          <div className=\"panelWrapper\">\n\n            <aside className=\"aside\">\n              <div className=\"aside-item\">\n                <span className=\"aside-title\">Filtro</span>\n\n                <div className=\"asideFilterWrapper\">\n                  <div className=\"switchColor\">\n                    <Switch\n                      classes={{ root: \"switch\" }}\n                      checked={panel.filter}\n                      onChange={handlePanel('filter')}\n                      value=\"filter\"\n                      color=\"primary\"\n                      inputProps={{ 'aria-label': 'primary checkbox' }}\n                    />\n                    <div className=\"swatch\" onClick={handleOpenColorPicker}>\n                      <div className=\"color\" style={{ background: panel.filter ? filterColor : '#e0e0e0' }} />\n                    </div>\n                    {displayColorPicker ? (\n                      <div className=\"popover\">\n                        <div className=\"cover\" onClick={handleCloseColorPicker} />\n                        <SketchPicker\n                          color={filterColor}\n                          onChangeComplete={handleFilterColor}\n                        />\n                      </div>\n                    ) : null}\n                  </div>\n                  <Slider\n                    disabled={!panel.filter}\n                    value={filterOpacity}\n                    min={0}\n                    step={0.1}\n                    max={1}\n                    onChange={handleChangeFilterValue}\n                    valueLabelDisplay=\"auto\"\n                    aria-labelledby=\"discrete-slider\"\n                  />\n                </div>\n              </div>\n              <div className=\"aside-item item-middle\">\n                <span className=\"aside-title\">Texto</span>\n\n                {boxes.map((input, index) => (\n                  <TextField\n                    key={input.id}\n                    id=\"outlined-size-normal\"\n                    variant=\"outlined\"\n                    size=\"small\"\n                    value={input.title}\n                    onChange={event => handleChangeText(event, index)}\n                    classes={{ root: 'inputTextField' }}\n                  />\n                ))}\n\n                <Button\n                  variant=\"outlined\"\n                  size=\"small\"\n                  color=\"primary\"\n                  onClick={handleAddText}\n                >\n                  Inserir texto\n                </Button>\n              \n              </div>\n\n            </aside>\n\n            <div className=\"panel\">\n              <div\n                className={`${'canvas'} ${orientation === 'horizontal' ? 'portrait' : 'landscape'}`}\n                style={{ background: `url('${localStorage.getItem('background')}')`, backgroundSize: 'cover' }}\n              >\n                {panel.filter && (\n                  <OverlayFilter\n                    color={filterColor}\n                    opacity={filterOpacity}\n                  />\n                )}\n\n                {panel.text && (\n                  <DndProvider backend={Backend}>\n                    <DragAndDropText\n                      boxes={boxes}\n                      setBoxes={setBoxes}\n                    />\n                  </DndProvider>\n                )}\n              </div>\n            </div>\n            \n          </div>\n        )}\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}